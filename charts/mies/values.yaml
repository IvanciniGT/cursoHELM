auth:
  existentSecretName: ~
  userNameKey: user
  passwordKey: password
  userNameValue: elastic       # Se ignora si se indica un existentSecretName
  passwordValue: ~      # Se ignora si se indica un existentSecretName
                               # Si no se establece un password y hay que generar secret, se genera un password aleatorio.

kibana:
  
  replicaCount: 1

  image:
    repository: docker.elastic.co/kibana/kibana
    pullPolicy: IfNotPresent
    tag: 7.8.0

  service: 
    nameOverride: ~
    fullnameOverride: ~ 
    type: ClusterIP
    port: 5601
    targetPort: 5601
    #nodePort: 30004
  
  extraLabels: #{}
    mode: Ivan
    mode2: Ivancito
    
  # ingress:

elasticsearch:

  clusterName: mi-cluster

  nodeProperties:
    ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"

  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    pullPolicy: IfNotPresent
    tag: 7.7.0
  
  ports:
    internal: 9300
    external: 9200

  master:
  
    replicaCount: 3
  
    service: 
      nameOverride: ~
      fullnameOverride: ~
      
    nodeProperties:
      ES_JAVA_OPTS: "-Xms220m -Xmx220m"
      #VARIABLE2: valor2
    
    persistence:
      enable: true
      storage: 1Gi
      storageClass: ~

    extraLabels: ~ #{}
      
  data:
  
    replicaCount: 2
  
    nodeProperties:
      ES_JAVA_OPTS: "-Xms220m -Xmx220m"
    
    persistence:
      enable: true
      storage: 1Gi
      storageClass: ~
      
  ingest:
  
    replicaCount: 0
  
    nodeProperties:
      ES_JAVA_OPTS: "-Xms220m -Xmx220m"
    
    persistence:
      enable: true
      storage: 1Gi
      storageClass: ~

  coordinator:
  
    replicaCount: 0
  
    nodeProperties:
      ES_JAVA_OPTS: "-Xms220m -Xmx220m"
    
    persistence:
      enable: true
      storage: 1Gi
      storageClass: ~
      
  services:
  
    ingest:
      nameOverride: ""
      fullnameOverride: ""
      type: ClusterIP
      port: 9200
      #nodePort: 30006
  
    query:
      nameOverride: ""
      fullnameOverride: ""
      type: ClusterIP
      port: 9200
      #nodePort: 30007
    

#########################################################    

# Default values for mies.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        backend:
          serviceName: chart-example.local
          servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
